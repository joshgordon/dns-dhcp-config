#!/usr/bin/python

from config import * 
import sys
import os
import shutil
from datetime import datetime
import MySQLdb as mdb

#Adapted from: https://gist.github.com/pklaus/2016269

def buildDNSHead(file):

    # Configuration options 
    host = domain 
    first_name_server = nameserver.split('.')[0] + '.' 
    administrative_contact = "hostmaster."
    record_ttl = "1h"
    zone_serial = datetime.now().strftime("%Y%m%d%H%M%S")
    slave_refresh_interval = "1h"
    slave_retry_interval = "15m"
    slave_expiration_time = "1w"
    nxdomain_cache_time = "1h"
   
    # Write a warning for the next person to not edit this file by hand.  
    file.write(";!!!!!!!!!!!!!!!!!!!!!!!!NOTICE!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    file.write(";DO NOT EDIT THIS FILE BY HAND. IT WILL BE OVERWRITTEN.!\n")
    file.write(";!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n") 

    
    file.write("$TTL {0}\t; Default TTL\n".format(record_ttl))
    
    file.write("@\tIN\tSOA\t{0}\t{1} (\n".format(first_name_server, administrative_contact))
    file.write("\t{0}\t; serial\n".format(zone_serial))
    file.write("\t{0}\t; slave refresh interval\n".format(slave_refresh_interval)) 
    file.write("\t{0}\t; slave retry interval\n".format(slave_retry_interval)) 
    file.write("\t{0}\t; slave copy expire time\n".format(slave_expiration_time))
    file.write("\t{0}\t; NXDOMAIN cache time\n".format(nxdomain_cache_time))
    file.write("\t)\n\n\n")


def addForwardDNS(file, host, IP): 
    file.write("{0}\tIN\tA\t{1}\n".format(host, IP))

def addCNAME(file, host, alias): 
    file.write("{0}\tIN\tCNAME\t{1}\n".format(host, alias))
    
def addReverseDNS(file, host, ip): 
    file.write("{0}\tIN\tPTR\t{1}.gordonclan.net.\n".format(ip.split('.')[3], host))

def addDHCP(file, uniqueName, mac, ip): 
    file.write("\thost {0} {{ \n\t\thardware ethernet {1};\n\t\tfixed-address {2};\n\t}}\n".format(uniqueName, mac, ip))

def main(): 
    #Set up the DB connection 
    con = mdb.connect(dbhost, dbuser, dbpass, dbname)

    with con: 
        cur = con.cursor(mdb.cursors.DictCursor) 
        
        #Compute the file names. 
        dns_file="db." + domain 
        rdns_file="db." + rdns_ip.split('.')[0]


        #Remove the existing config files. 
        try: 
            os.remove(dns_file)
            os.remove(rdns_file)
            os.remove('dhcpd.conf') 
        
        except: 
            print "One or more config files not found. Recreating." 
    
        #copy the head of the dhcp config file. 
        shutil.copy('dhcpd.conf.top', 'dhcpd.conf')
    
        #Open the files for writing: 
        db_rdns = file(rdns_file, 'w') 
        db_domain = file(dns_file, 'w') 
        dhcpdconf = file('dhcpd.conf', 'a') 
    
        #build the top part of the dhcp files. 
        buildDNSHead(db_rdns)
        db_rdns.write("{0}.{1}.{2}.in-addr.arpa. \t IN \t NS \t {3}.\n".format(rdns_ip.split('.')[2], rdns_ip.split('.')[1], rdns_ip.split('.')[0], nameserver))

        buildDNSHead(db_domain) 
        db_domain.write("@ \t IN \t NS \t {0}.\n".format(nameserver)) 
   
   
        # Get all of the hosts.  
        cur.execute("SELECT * FROM hosts;")

        hosts = cur.fetchall() 

        #Loop through the hosts
        for host in hosts: 
            dhcpname = host["dhcpname"]
            hostname = host["hostname"]
            ip = host["ipaddress"]
            mac = host["mac"]
            addForwardDNS(db_domain, hostname, ip)
            addReverseDNS(db_rdns, hostname, ip) 
            addDHCP(dhcpdconf, dhcpname, mac, ip)
       
        # Select all the cnames. 
        cur.execute("SELECT * FROM cname;") 
 
        cnames = cur.fetchall() 
         
        for cname in cnames:
            addCNAME(db_domain, cname["cname"], cname["host"])
 
        dhcpdconf.write("}\n"); 
        
        db_rdns.close() 
        db_domain.close() 
        dhcpdconf.close() 


main() 
